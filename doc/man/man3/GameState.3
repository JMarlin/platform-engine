.TH "GameState" 3 "2 Apr 2009" "Version v0.0.1 Pre-Alpha" "Platform 2D Game Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
GameState \- A state of behavior for the engine.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <GameState.h>\fP
.PP
Inherited by \fBGameNavigationState\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBGameState\fP ()"
.br
.ti -1c
.RI "virtual void \fBInit\fP ()=0"
.br
.ti -1c
.RI "virtual void \fBCleanup\fP ()=0"
.br
.ti -1c
.RI "virtual void \fBPause\fP ()=0"
.br
.ti -1c
.RI "virtual void \fBResume\fP ()=0"
.br
.ti -1c
.RI "virtual void \fBHandleEvents\fP (\fBPlatformEngine\fP *game, SDL_Event &event)=0"
.br
.ti -1c
.RI "virtual void \fBUpdate\fP (\fBPlatformEngine\fP *game)=0"
.br
.ti -1c
.RI "virtual void \fBDraw\fP (\fBPlatformEngine\fP *game)=0"
.br
.ti -1c
.RI "void \fBChangeState\fP (\fBPlatformEngine\fP *game, \fBGameState\fP *state)"
.br
.in -1c
.SH "Detailed Description"
.PP 
A state of behavior for the engine. 

A Game State is a layer on top of the default engine behavior that requires a custom form of behavior for its operation. In the Platform engine, the an instance of the engine stores the current state on a stack, and any newly initiated states can be placed on top of the stack. The normal engine functions will generally call the corresponding operation functions from the state at the top of the stack, so that the engine's operation is ultimately controlled by the current top state.
.PP
This class in particular is an abstract class, not intended for actual use. The derivative classes, which are the different kinds of states, are used in normal program operations. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "GameState::GameState ()"
.PP
.SH "Member Function Documentation"
.PP 
.SS "void GameState::ChangeState (\fBPlatformEngine\fP * game, \fBGameState\fP * state)\fC [inline]\fP"
.PP
.SS "virtual void GameState::Cleanup ()\fC [pure virtual]\fP"
.PP
Implemented in \fBGameNavigationState\fP.
.SS "virtual void GameState::Draw (\fBPlatformEngine\fP * game)\fC [pure virtual]\fP"
.PP
Implemented in \fBGameNavigationState\fP.
.SS "virtual void GameState::HandleEvents (\fBPlatformEngine\fP * game, SDL_Event & event)\fC [pure virtual]\fP"
.PP
Implemented in \fBGameNavigationState\fP.
.SS "virtual void GameState::Init ()\fC [pure virtual]\fP"
.PP
Implemented in \fBGameNavigationState\fP.
.SS "virtual void GameState::Pause ()\fC [pure virtual]\fP"
.PP
Implemented in \fBGameNavigationState\fP.
.SS "virtual void GameState::Resume ()\fC [pure virtual]\fP"
.PP
Implemented in \fBGameNavigationState\fP.
.SS "virtual void GameState::Update (\fBPlatformEngine\fP * game)\fC [pure virtual]\fP"
.PP
Implemented in \fBGameNavigationState\fP.

.SH "Author"
.PP 
Generated automatically by Doxygen for Platform 2D Game Engine from the source code.
